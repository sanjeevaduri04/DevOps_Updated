
 Git is very popular tool
 Git is a version control tool 
 
======================================================================================================= 
 
 Git Commands:
 ------------
 INSPECT & COMPARE   = Examining logs, diffs and object information
 -----------------
 
 git log --> show the commit history for the currently activr branch 
 
 git log branchB ..branchA  --> show the commits on branchA that are not on branchB
 
 git log --follow [file] --> show the commits that changed file, even across renames
 
 git shoe [SHA] --> show any object in Git in human readable format
 
 ================================================================================================
 
 TRACKING PATH CHANGES
 ---------------------     Versioning file removes and path changes
 
 git rm [file] --> delete the file from project and stage the removal for commit
 
 git mv [existimg-path] [new-path] --> Change an existing file path and dtage the remove
 
 git log --stat -M --> show all commit logs with indication of any pths moved
 
 =====================================================================================================
 
 IGNORING PATTERNS
 ------------------ Preventing unintentional staging or committing of files
 
 logs/
 *.notes
 pattern*/
 
 Save a file with desired patterns as .gitigonre with either direct string matches or wildcard globals
 
 git config --global core.excludgesfile [file] --> System wide ignore patern for all local repositories
 ==============================================================================================================
 
 SHARE & UPDTE   Retrieving updates from another repository and updating local repository 
 ------------
 
 git remote add [alias] [url] --> dd a git URL as an alias
 
 git fetch [alias]  --> Fetch down all the branches from that Git remote
 
 git merge [alias]/[branch] --> merge a remote branch into your current branch to bring it up  
 to date.
 
 git push [alias] [branch] --> Trnasmit locl branch commits to the remote repository branch 
 
 git pull --> fetch and merge any commits from the tracking remote branch
 
 
 ================================================================================
 
 REWRITE HISTORY 
 ----------------     Rewriting branches, updting commits and clearing history 
 
 
 git rebase --> ply any commits of curent branch ahead od specified one
 
 git resey --hard [commit] --.clear staging area, rewrite working tree from specified commit.
 
 =================================================================================================
 
 
 TEMPORARY COMMITS
 -----------------  Temporary store modified, trcked file in order to change branches
 
 git stash --> Save modified and stged changes
 
 git stash list --> list stack order of stashed file changes
 
 git stsh pop --> write working from top of stash stck
 
 git stash drop --> discard the changes from top of stash stack
 
 =====================================================================================
 
 
 To understand how git works we will be using some plumbing commands of git.
git cat-file -t <id> # to know the type
git cat-file -p <id> # to know the contents


Merge and cherry-pick
Merging branches is one way of bringing changes from one branch to other.
As of now of status of the branch is as follows
